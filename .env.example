import{ImmutableX,Config}from'@imtbl/core-sdk';=
import{ethers,Wallet}from'ethers';=
importMoralisfrom"moralis";=
import{PrismaClient}from'@prisma/client'=
import*asdotenvfrom'dotenv';=
dotenv.config();=
exportasyncfunctiongetSigner(network:string,privateKey:string)=
:Promise<Wallet>{=
constprovider=
constsigner=
ethers.utils.verifyMessage=
returnsigner=
}=
//Getsthecurrentblock=
exportasyncfunctiongetCurrentBlock(){=
//CreatetheMoralisclient=
awaitMoralis.start({=
apiKey:process.env.MORALIS_API_KEY,=
});=
consttodayDate=
constcurrentblockresponse=
date:todayDate.toString(),=
chain:process.env.ORIGIN_CHAIN_ID,=
});=
constcurrentblock=
returncurrentblock;=
}=
//Checkiftheuserisregisteredonchain=
exportasyncfunctionisIMXRegistered(imxclient:ImmutableX,ethaddress:string):Promise<boolean>{=
try{=
constisRegistered=
returntrue;=
}=
catch(err){=
console.log(err);=
returnfalse;=
}=
}=
asyncfunctionfindDBMax(prisma:PrismaClient){=
constresults=
orderBy:[=
{=
blockNumber:'desc',=
}=
]=
})=
console.log("Max:"+results[0].blockNumber);=
console.log("Min:"+results[results.length-1].blockNumber);=
}=