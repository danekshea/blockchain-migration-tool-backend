importMoralisfrom"moralis";=
import{EvmChain,EvmNftTransfer,EvmAddress}from'@moralisweb3/evm-utils';=
import{PrismaClient}from'@prisma/client'=
import*asdotenvfrom'dotenv';=
dotenv.config();=
asyncfunctiongetBurnTransfersByBlockRange(burnTransfers:EvmNftTransfer[]=
//CreatetheMoralisclient=
awaitMoralis.start({=
apiKey:process.env.MORALIS_API_KEY,=
});=
consttodayDate=
constcurrentblockresponse=
date:todayDate.toString(),=
chain:EvmChain.BSC,=
});=
constcurrentblock=
//Checktomakesuretheuserhasputablocknumberthat'snothigherthanthecurrentblock=
if(to_block>currentblock){=
console.log("Tryingtogetablockhigherthanthecurrentblock,settingtocurrentblock");=
to_block=
}=
//Checktomakesurethefrom_blockislessthantheto_block=
if(from_block>to_block){=
console.log("Tryingtogetafrom_blockhigherthantheto_block,settingfrom_blockto1");=
from_block=
}=
//Moralisdoesn'tallowrequestsformorethan1mblocksatatime=
if(to_block-from_block>1000000){=
console.log("MoralisAPIdoesn'tallowmorethan1millionblocksinarequest,settingto_blockto"+from_block+1000000);=
to_block=
}=
//Getalltransfersforacollectionaddressandchain=
try{=
constresponse=
address:process.env.ORIGIN_COLLECTION_ADDRESS!,=
chain:EvmChain.BSC,=
from_block:from_block,=
to_block:to_block,=
cursor:cursor=
});=
//console.log(response.result);=
//Optionaltimeoutifyougetratelimited=
//awaitnewPromise(f=
//Iteratethroughandsortouttheburntransfersandpushthemintoanarray,makesurenoduplicatetokenIDsareloaded=
constburnAddress=
for(constelementofresponse.result){=
if(element.toAddress.lowercase=
burnTransfers.push(element);=
usedtokenids.push(element.tokenId);=
}=
}=
//Checkifthere'sadditionalpagesandcursorthroughthem=
//Ifindexisincluded,it'sbecauseyouwanttolimittherequestswhiletesting=
//if(response.pagination&&index<5){=
if(response.pagination.cursor!=
console.log("Cursingthroughpage"+(index+1)+"oftransfersinblockrange"+from_block+"-"+to_block+"...");=
console.log(response.pagination);=
index++;=
returnawaitgetBurnTransfersByBlockRange(burnTransfers,from_block,to_block,response.pagination.cursor,index,usedtokenids);=
}=
console.log("Found"+burnTransfers.length+"burntransfersinblockrange")=
returnburnTransfers;=
}=
catch(err){=
console.log(err);=
console.log("Erroredout,retryingin1second...");=
awaitnewPromise(f=
returnawaitgetBurnTransfersByBlockRange(burnTransfers,from_block,to_block,cursor,index,usedtokenids);=
}=
}=
asyncfunctionbackFillBurnTransfers(prisma:PrismaClient,from_block:number,to_block:number,blockinterval:number){=
if((to_block-from_block)<blockinterval){=
console.log("Blockintervalislargerthantheblockrange,settingblockintervaltoblockrange");=
blockinterval=
}=
constbackfills:number=
console.log("Batchesofblockstobackfill:"+backfills);=
letindexblock=
while(indexblock<to_block){=
//Ifyou'reattheend,makesureyoudon'tgopastto_block=
if(indexblock+blockinterval>to_block){=
blockinterval=
}=
console.log("Gettingblocksinblockrange:"+indexblock+"-"+(indexblock+blockinterval));=
constburnTransfers=
if(burnTransfers.length>0){=
awaitloadBurnTransfers(prisma,burnTransfers);=
}=
indexblock+=
}=
console.log('Donebackfillingburntransfersinblockrange'+from_block+'-'+to_block);=
}=
asyncfunctionmonitorBurnTransfers(prisma:PrismaClient,last_polled_block:number,block_polling_interval:number){=
//CreatetheMoralisclient=
awaitMoralis.start({=
apiKey:process.env.MORALIS_API_KEY,=
});=
try{=
consttodayDate=
constcurrentblockresponse=
date:todayDate.toString(),=
chain:EvmChain.BSC,=
});=
constcurrentblock=
if(currentblock-last_polled_block>=
console.log("Currentblock"+currentblock+"exceedsthelastpolledblock"+last_polled_block+"bytheblockpollinginterval"+block_polling_interval+",backfilling...");=
awaitbackFillBurnTransfers(prisma,last_polled_block,currentblock,block_polling_interval);=
monitorBurnTransfers(prisma,currentblock,block_polling_interval);=
}=
else{=
console.log("Currentblock"+currentblock+"doesnotexceedthelastpolledblock"+last_polled_block+"bytheblockpollinginterval"+block_polling_interval);=
//Delaybeforecheckingagain=
awaitnewPromise(f=
monitorBurnTransfers(prisma,last_polled_block,block_polling_interval);=
}=
}=
catch(err){=
console.log(err);=
console.log("Erroredout,retryingin1second...");=
awaitnewPromise(f=
monitorBurnTransfers(prisma,last_polled_block,block_polling_interval);=
}=
}=
asyncfunctionloadBurnTransfers(prisma:PrismaClient,burnTransfers:EvmNftTransfer[]){=
console.log("Loading"+burnTransfers.length+"burntransfersintothedatabase");=
for(constelementofburnTransfers){=
try{=
constburn=
data:{=
minted:0,=
chain:element.chain.apiId,=
blockNumber:element.blockNumber.toString(),=
blockTimestamp:element.blockTimestamp,=
txHash:element.transactionHash,=
tokenAddress:element.tokenAddress.lowercase,=
tokenId:element.tokenId,=
fromAddress:element.fromAddress?.lowercase,=
toAddress:element.toAddress.lowercase=
},=
})=
//console.log(burn);=
}=
catch(error){=
console.log(error);=
}=
}=
prisma.$disconnect=
}=
asyncfunctionfindMax(){=
constprisma=
constresults=
orderBy:[=
{=
blockNumber:'desc',=
}=
]=
})=
//createmoralisclient=
awaitMoralis.start({=
apiKey:process.env.MORALIS_API_KEY,=
});=
consttodayDate=
consttest=
console.log(todayDate);=
constresponse=
date:test,=
chain:EvmChain.BSC,=
});=
console.log(response);=
console.log("Max:"+results[0].blockNumber);=
console.log("Min:"+results[results.length-1].blockNumber);=
}=
asyncfunctiongetCurrentBlock(){=
//CreatetheMoralisclient=
awaitMoralis.start({=
apiKey:process.env.MORALIS_API_KEY,=
});=
consttodayDate=
constcurrentblockresponse=
date:todayDate.toString(),=
chain:EvmChain.BSC,=
});=
constcurrentblock=
returncurrentblock;=
}=
asyncfunctionmain(){=
//findthemaxblocknumber=
//findMax();=
//backfillsacertainrange=
//backFillBurnTransfers(1200000,22739231,1000000);=
//backfillsandmonitors=
constprisma=
//awaitbackFillBurnTransfers(prisma,23862889,24862889,25000);=
monitorBurnTransfers(prisma,25824474,5);=
//getscurrentblock=
//console.log(awaitgetCurrentBlock());=
}=
main();=